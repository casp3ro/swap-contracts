/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Swap, SwapInterface } from "../Swap";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_baseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quoteToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_priceRatio",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "returnToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountTo",
        type: "uint256",
      },
    ],
    name: "Swaped",
    type: "event",
  },
  {
    inputs: [],
    name: "baseToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceRatio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceRatioDecimal",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "quoteToken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amountFrom",
        type: "uint256",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_priceRatio",
        type: "uint256",
      },
    ],
    name: "updatePriceRatio",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000805460ff60a01b1916600960a01b17905534801561002357600080fd5b50604051610efa380380610efa833981016040819052610042916100ef565b61004b33610083565b600180546001600160a01b039485166001600160a01b031991821617909155600280549390941692169190911790915560035561012b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100ea57600080fd5b919050565b60008060006060848603121561010457600080fd5b61010d846100d3565b925061011b602085016100d3565b9150604084015190509250925092565b610dc08061013a6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b1461012d578063c55dae631461013e578063d004f0f714610151578063d8bd926014610164578063f2fde38b1461017757600080fd5b806302af4827146100a35780630aa2f420146100ce578063217a4b70146100e557806347e7ef2414610110578063715018a614610125575b600080fd5b6000546100b790600160a01b900460ff1681565b60405160ff90911681526020015b60405180910390f35b6100d760035481565b6040519081526020016100c5565b6002546100f8906001600160a01b031681565b6040516001600160a01b0390911681526020016100c5565b61012361011e366004610a9c565b61018a565b005b610123610266565b6000546001600160a01b03166100f8565b6001546100f8906001600160a01b031681565b61012361015f366004610a9c565b61027a565b610123610172366004610ae8565b6104f5565b610123610185366004610a81565b610502565b60015482906001600160a01b03808316911614806101b557506002546001600160a01b038281169116145b6102015760405162461bcd60e51b8152602060048201526018602482015277151bdad95b881859191c995cdcc81a5cc81a5b9d985b1a5960421b60448201526064015b60405180910390fd5b826102176001600160a01b03821633308661057b565b604080513381526001600160a01b03861660208201529081018490527f8752a472e571a816aea92eec8dae9baf628e840f4929fbcc2d155e6233ff68a79060600160405180910390a150505050565b61026e6105ec565b6102786000610646565b565b60015482906001600160a01b03808316911614806102a557506002546001600160a01b038281169116145b6102ec5760405162461bcd60e51b8152602060048201526018602482015277151bdad95b881859191c995cdcc81a5cc81a5b9d985b1a5960421b60448201526064016101f8565b6000821161033c5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657220616d6f756e7420657863656564732062616c616e63650060448201526064016101f8565b60015460009081906001600160a01b038681169116148015610373576001546002546001600160a01b03918216945016915061038a565b6002546001546001600160a01b0391821694501691505b6000610478846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156103c857600080fd5b505afa1580156103dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104009190610b01565b846001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561043957600080fd5b505afa15801561044d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104719190610b01565b8885610696565b905061048f6001600160a01b03851633308961057b565b6104a36001600160a01b03841633836107db565b604080516001600160a01b03851681523360208201529081018290527ff0aedcee50ce0ca8bb3067924d5ed38a062325eaf2a37cd325e162cee44f37379060600160405180910390a150505050505050565b6104fd6105ec565b600355565b61050a6105ec565b6001600160a01b03811661056f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101f8565b61057881610646565b50565b6040516001600160a01b03808516602483015283166044820152606481018290526105e69085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610810565b50505050565b6000546001600160a01b031633146102785760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101f8565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806106a38686610ce7565b9050600083156107325760008260000b13156106f9576003546000546106d390600160a01b900460ff1684610b73565b6106de90600a610c1b565b6106e89087610cc8565b6106f29190610bb6565b90506107d1565b61070282610d54565b61070d90600a610c1b565b60035461071a9190610cc8565b6000546106de90600160a01b900460ff16600a610c1b565b6000805461074a90600160a01b900460ff1684610ce7565b60000b131561078c5760005461076a90600160a01b900460ff1683610ce7565b61077590600a610c1b565b6003546107829087610cc8565b6106f29190610cc8565b6000546107a390600160a01b900460ff1683610ce7565b6107ac90610d54565b6107b790600a610c1b565b6003546107c49087610cc8565b6107ce9190610bb6565b90505b9695505050505050565b6040516001600160a01b03831660248201526044810182905261080b90849063a9059cbb60e01b906064016105af565b505050565b6000610865826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108e29092919063ffffffff16565b80519091501561080b57808060200190518101906108839190610ac6565b61080b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016101f8565b60606108f184846000856108fb565b90505b9392505050565b60608247101561095c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016101f8565b6001600160a01b0385163b6109b35760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101f8565b600080866001600160a01b031685876040516109cf9190610b24565b60006040518083038185875af1925050503d8060008114610a0c576040519150601f19603f3d011682016040523d82523d6000602084013e610a11565b606091505b5091509150610a21828286610a2c565b979650505050505050565b60608315610a3b5750816108f4565b825115610a4b5782518084602001fd5b8160405162461bcd60e51b81526004016101f89190610b40565b80356001600160a01b0381168114610a7c57600080fd5b919050565b600060208284031215610a9357600080fd5b6108f482610a65565b60008060408385031215610aaf57600080fd5b610ab883610a65565b946020939093013593505050565b600060208284031215610ad857600080fd5b815180151581146108f457600080fd5b600060208284031215610afa57600080fd5b5035919050565b600060208284031215610b1357600080fd5b815160ff811681146108f457600080fd5b60008251610b36818460208701610d28565b9190910192915050565b6020815260008251806020840152610b5f816040850160208701610d28565b601f01601f19169190910160400192915050565b60008160000b8360000b6000821282607f03821381151615610b9757610b97610d74565b82607f19038212811615610bad57610bad610d74565b50019392505050565b600082610bd357634e487b7160e01b600052601260045260246000fd5b500490565b600181815b80851115610c13578160001904821115610bf957610bf9610d74565b80851615610c0657918102915b93841c9390800290610bdd565b509250929050565b60006108f460ff841683600082610c3457506001610cc2565b81610c4157506000610cc2565b8160018114610c575760028114610c6157610c7d565b6001915050610cc2565b60ff841115610c7257610c72610d74565b50506001821b610cc2565b5060208310610133831016604e8410600b8410161715610ca0575081810a610cc2565b610caa8383610bd8565b8060001904821115610cbe57610cbe610d74565b0290505b92915050565b6000816000190483118215151615610ce257610ce2610d74565b500290565b600081810b83820b8281128015607f19830184121615610d0957610d09610d74565b81607f018313811615610d1e57610d1e610d74565b5090039392505050565b60005b83811015610d43578181015183820152602001610d2b565b838111156105e65750506000910152565b600081810b607f19811415610d6b57610d6b610d74565b60000392915050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206a780642c2ab290a8bcb47405765d8a1ecff326e3dbe5834008ebbcf57fff5a864736f6c63430008050033";

export class Swap__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _baseToken: string,
    _quoteToken: string,
    _priceRatio: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Swap> {
    return super.deploy(
      _baseToken,
      _quoteToken,
      _priceRatio,
      overrides || {}
    ) as Promise<Swap>;
  }
  getDeployTransaction(
    _baseToken: string,
    _quoteToken: string,
    _priceRatio: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _baseToken,
      _quoteToken,
      _priceRatio,
      overrides || {}
    );
  }
  attach(address: string): Swap {
    return super.attach(address) as Swap;
  }
  connect(signer: Signer): Swap__factory {
    return super.connect(signer) as Swap__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SwapInterface {
    return new utils.Interface(_abi) as SwapInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Swap {
    return new Contract(address, _abi, signerOrProvider) as Swap;
  }
}
